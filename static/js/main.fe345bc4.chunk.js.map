{"version":3,"sources":["Components/images/logo.png","Components/Navbar.js","Components/store/actions/index.js","Components/SessionEntry.js","Components/Sessions.js","Components/Campaign.js","Components/CharForm.js","Components/CharEntry.js","Components/CharList.js","Components/Characters.js","Components/Encounters.js","App.js","reportWebVitals.js","Components/store/reducers/campNameReducer.js","Components/store/reducers/campSummReducer.js","Components/store/reducers/sessionReducer.js","Components/store/reducers/characterReducer.js","Components/store/reducers/index.js","Components/store/store.js","index.js"],"names":["Navbar","className","src","logo","alt","to","updateCampName","value","dispatch","type","payload","updateCampSumm","addSession","title","text","id","Math","random","deleteSession","target","addChar","charName","race","charClass","armorClass","initiative","speed","hitMax","hitDice","profBonus","strength","dexterity","constitution","intelligence","wisdom","charisma","charNotes","deleteChar","SessionEntry","onClick","class","Sessions","useState","toggleAddSession","setToggleAddSession","titleInput","setTitleInput","textInput","setTextInput","handleToggle","sessions","useSelector","state","useDispatch","bindActionCreators","actionCreators","onSubmit","e","preventDefault","replace","handleSubmit","onChange","handleTitleInput","handleTextInput","cols","rows","map","session","Campaign","campName","campSumm","toggleCampInput","setToggleCampInput","handleCampToggle","placeholder","CharForm","handleToggleForm","defaultFormData","formData","updateFormData","handleInputChange","key","name","handleFormSubmit","htmlFor","CharEntry","props","CharList","characters","character","charData","Characters","toggleForm","setToggleForm","Encounters","App","basename","process","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","filter","reducers","combineReducers","campNameReducer","campSummReducer","sessionReducer","characterReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe345bc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8385d9aa.png\";","import React from 'react'\r\nimport logo from './images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <img src={logo} alt=\"\" />\r\n            <Link to='/'>\r\n                <button>\r\n                    <i className=\"fas fa-book\"></i>\r\n                </button>\r\n            </Link>\r\n            <Link to='/characters'>\r\n                <button>\r\n                    <i className=\"fas fa-users\"></i>\r\n                </button>\r\n            </Link>\r\n            <Link to='/encounters'>\r\n                <button>\r\n                    <i className=\"fas fa-skull\"></i>\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import { actionCreators } from \"..\"\r\n\r\n/*Campaign Actions*/\r\nexport const updateCampName = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'updateName',\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCampSumm = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'updateSumm',\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n\r\n/*Session Actions*/\r\nexport const addSession = (title, text) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'addSession',\r\n            title: title,\r\n            payload: text,\r\n            id: Math.random()\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteSession = (target) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'deleteSession',\r\n            payload: target\r\n        })\r\n    }\r\n}\r\n\r\n/*Character Actions*/\r\nexport const addChar = (\r\n    charName,\r\n    race,\r\n    charClass,\r\n    armorClass,\r\n    initiative,\r\n    speed,\r\n    hitMax,\r\n    hitDice,\r\n    profBonus,\r\n    strength,\r\n    dexterity,\r\n    constitution,\r\n    intelligence,\r\n    wisdom,\r\n    charisma,\r\n    charNotes\r\n) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'addChar',\r\n            id: Math.random(),\r\n            charName: charName,\r\n            race: race,\r\n            charClass: charClass,\r\n            armorClass: armorClass,\r\n            initiative: initiative,\r\n            speed: speed,\r\n            hitMax: hitMax,\r\n            hitDice: hitDice,\r\n            profBonus: profBonus,\r\n            strength: strength,\r\n            dexterity: dexterity,\r\n            constitution: constitution,\r\n            intelligence: intelligence,\r\n            wisdom: wisdom,\r\n            charisma: charisma,\r\n            charNotes: charNotes\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteChar = (target) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'deleteSession',\r\n            payload: target\r\n        })\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function SessionEntry({ title, text, deleteSession, id }) {\r\n    return (\r\n        <div className='SessionEntry'>\r\n            <button onClick={() => deleteSession(id)}><i class=\"fas fa-trash\"></i></button>\r\n            <h1>{title}</h1>\r\n            <hr />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\nimport SessionEntry from './SessionEntry';\r\n\r\nexport default function Sessions() {\r\n\r\n    const [toggleAddSession, setToggleAddSession] = useState(false);\r\n    const [titleInput, setTitleInput] = useState('');\r\n    const [textInput, setTextInput] = useState('');\r\n\r\n    const handleToggle = () => {\r\n        setToggleAddSession(!toggleAddSession);\r\n    }\r\n\r\n    const handleTitleInput = (e) => {\r\n        setTitleInput(e.target.value);\r\n    }\r\n    const handleTextInput = (e) => {\r\n        setTextInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (titleInput.replace(/\\s+/g, '') === '' || textInput.replace(/\\s+/g, '') === '') {\r\n            return;\r\n        }\r\n        handleToggle();\r\n        addSession(titleInput, textInput);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const sessions = useSelector((state) => state.sessions);\r\n    const dispatch = useDispatch();\r\n\r\n    const { addSession, deleteSession } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    return (\r\n        <div className='Sessions'>\r\n            <h1>Session Logs</h1>\r\n            {toggleAddSession ?\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <input className='inputTitle' onChange={(e) => handleTitleInput(e)} value={titleInput} type=\"text\" />\r\n                    <textarea onChange={(e) => handleTextInput(e)} value={textInput} id=\"\" cols=\"50\" rows=\"10\"></textarea>\r\n                    <input className='submit' type=\"submit\" />\r\n                    <button className='cancel' onClick={handleToggle}>Cancel</button>\r\n                </form>\r\n                :\r\n                <button className='addSession' onClick={handleToggle}><i className=\"fas fa-plus\"></i></button>\r\n            }\r\n            {sessions.map(session => {\r\n                return (\r\n                    <SessionEntry\r\n                        title={session.title}\r\n                        text={session.text}\r\n                        deleteSession={deleteSession}\r\n                        id={session.id}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\nimport Sessions from './Sessions';\r\n\r\nexport default function Campaign() {\r\n\r\n    const campName = useSelector((state) => state.campName);\r\n    const campSumm = useSelector((state) => state.campSumm);\r\n    const dispatch = useDispatch();\r\n\r\n    const { updateCampName, updateCampSumm } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    const [toggleCampInput, setToggleCampInput] = useState(false);\r\n\r\n    const handleCampToggle = () => {\r\n        setToggleCampInput(!toggleCampInput);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Campaign\">\r\n            {toggleCampInput ? \r\n                <form className='formCampaign'>\r\n                    <button className=\"toggleInput\" onClick={handleCampToggle}><i className=\"fas fa-check\"></i></button>\r\n                    <input value={campName} onChange={(e) => updateCampName(e)} type=\"text\" placeholder=\"Campaign Title\" className=\"inputCampName\" />\r\n                    <textarea value={campSumm} onChange={(e) => updateCampSumm(e)} className=\"inputCampSumm\" placeholder=\"Short summary of your campaign\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                </form>\r\n                :\r\n                <div className=\"campInfo\">\r\n                    <button className=\"toggleInput\" onClick={handleCampToggle}><i className=\"fas fa-edit\"></i></button>\r\n                    <h1>{campName}</h1>\r\n                    <p>{campSumm}</p>\r\n                </div>\r\n            }\r\n            <Sessions />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\n\r\nexport default function CharForm({ handleToggleForm }) {\r\n\r\n    const defaultFormData = {\r\n        charName: '',\r\n        race: '',\r\n        charClass: '',\r\n        armorClass: '',\r\n        initiative: '',\r\n        speed: '',\r\n        hitMax: '',\r\n        hitDice: '',\r\n        profBonus: '',\r\n        strength: '',\r\n        dexterity: '',\r\n        constitution: '',\r\n        intelligence: '',\r\n        wisdom: '',\r\n        charisma: '',\r\n        charNotes: ''\r\n    }\r\n\r\n    const [formData, updateFormData] = useState(defaultFormData);\r\n\r\n    const handleInputChange = (e) => {\r\n        /* Compare input name to key name, update specfic value */\r\n        for (const key in formData) {\r\n            if (e.target.name === key) {\r\n                updateFormData({ ...formData, [key]: e.target.value });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        addChar(formData);\r\n        handleToggleForm();\r\n        updateFormData(defaultFormData);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { addChar, deleteChar } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    return (\r\n        <div className='CharForm'>\r\n            <form onSubmit={(e) => handleFormSubmit(e)}>\r\n                <div className='textInputContainer'>\r\n                    <div className='containerLeft'>\r\n\r\n                    </div>\r\n                    <div className='containerRight'>\r\n\r\n                    </div>\r\n                    <div className='charInfo'>\r\n                        <label htmlFor=\"charName\">Name</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charName' />\r\n                        <label htmlFor=\"race\">Race</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='race' />\r\n                        <label htmlFor=\"charClass\">Class</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charClass' />\r\n                    </div>\r\n                    <div className='charMisc'>\r\n                        <label htmlFor=\"armorClass\">Armor Class</label>\r\n                        <input type=\"number\" name='armorClass' />\r\n                        <label htmlFor=\"initiative\">Initiative</label>\r\n                        <input type=\"number\" name='initiative' />\r\n                        <label htmlFor=\"speed\">Speed</label>\r\n                        <input type=\"number\" name='speed' />\r\n                        <label htmlFor=\"profBonus\">Proficency Bonus</label>\r\n                        <input type=\"number\" name='profBonus' />\r\n                    </div>\r\n                    <div className='charHealth'>\r\n                        <label htmlFor=\"hitMax\">Max Hit Points</label>\r\n                        <input type=\"number\" name='hitMax' />\r\n                        <label htmlFor=\"hitDice\">Hit Dice</label>\r\n                        <input type=\"text\" name='hitDice' />\r\n                    </div>\r\n                    <div className='charStats'>\r\n                        <label htmlFor=\"strength\">Strength</label>\r\n                        <input type=\"number\" name='strength' />\r\n                        <label htmlFor=\"dexterity\">Dexterity</label>\r\n                        <input type=\"number\" name='dexterity' />\r\n                        <label htmlFor=\"constitution\">Constitution</label>\r\n                        <input type=\"number\" name='constitution' />\r\n                        <label htmlFor=\"intelligence\">Intelligence</label>\r\n                        <input type=\"number\" name='intelligence' />\r\n                        <label htmlFor=\"wisdom\">Wisdom</label>\r\n                        <input type=\"number\" name='wisdom' />\r\n                        <label htmlFor=\"charisma\">Charisma</label>\r\n                        <input type=\"number\" name='charisma' />\r\n                    </div>\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CharEntry(props) {\r\n\r\n    return <div>\r\n    </div>;\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CharEntry from './CharEntry';\r\n\r\nexport default function CharList() {\r\n\r\n    const characters = useSelector((state) => state.characters);\r\n\r\n    return (\r\n        <div>\r\n            {characters.map(character => {\r\n                return (\r\n                    <CharEntry\r\n                        charName={character.charName}\r\n                        key={character.id}\r\n                        race={character.race}\r\n                        charClass={character.charClass}\r\n                        armorClass={character.armorClass}\r\n                        initiative={character.initiative}\r\n                        speed={character.speed}\r\n                        hitMax={character.hitMax}\r\n                        hitDice={character.hitDice}\r\n                        profBonus={character.profBonus}\r\n                        strength={character.strength}\r\n                        dexterity={character.dexterity}\r\n                        constitution={character.constitution}\r\n                        intelligence={character.intelligence}\r\n                        wisdom={character.wisdom}\r\n                        charisma={character.charisma}\r\n                        charNotes={character.charNotes}\r\n                        charData={character}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CharForm from './CharForm';\r\nimport CharList from './CharList';\r\n\r\nexport default function Characters() {\r\n\r\n    const [toggleForm, setToggleForm] = useState(false);\r\n\r\n    const handleToggleForm = () => {\r\n        setToggleForm(!toggleForm);\r\n    }\r\n\r\n    return (\r\n        <div className='Characters'>\r\n            {toggleForm ? <CharForm handleToggleForm={handleToggleForm} /> : <button className='addChar' onClick={handleToggleForm}>+</button>}\r\n            <h1>Characters</h1>\r\n            <hr />\r\n            <CharList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Encounters() {\r\n    return (\r\n        <div>\r\n            <h1>Encounters</h1>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n/*App Components*/\nimport Navbar from './Components/Navbar';\nimport Campaign from './Components/Campaign';\nimport Characters from './Components/Characters';\nimport Encounters from './Components/Encounters';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Routes>\n          <Route exact path='/' element={<Campaign />} />\n          <Route exact path='/characters' element={<Characters />} />\n          <Route exact path='/encounters' element={<Encounters />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 'My Campaign', action) => {\r\n    switch (action.type) {\r\n        case 'updateName':\r\n            return action.payload.target.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = 'Summary of my campaign', action) => {\r\n    switch (action.type) {\r\n        case 'updateSumm':\r\n            return action.payload.target.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'addSession':\r\n            return [\r\n                ...state,\r\n                {\r\n                    title: action.title,\r\n                    text: action.payload,\r\n                    id: action.id\r\n                }\r\n            ]\r\n        case 'deleteSession':\r\n            return state.filter(session => session.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'addChar':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    charName: action.charName,\r\n                    race: action.race,\r\n                    charClass: action.charClass,\r\n                    armorClass: action.armorClass,\r\n                    initiative: action.initiative,\r\n                    speed: action.speed,\r\n                    hitMax: action.hitMax,\r\n                    hitDice: action.hitDice,\r\n                    profBonus: action.profBonus,\r\n                    strength: action.strength,\r\n                    dexterity: action.dexterity,\r\n                    constitution: action.constitution,\r\n                    intelligence: action.intelligence,\r\n                    wisdom: action.wisdom,\r\n                    charisma: action.charisma,\r\n                    charNotes: action.charNotes\r\n                }\r\n            ]\r\n        case 'deleteChar':\r\n            return state.filter(character => character.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport campNameReducer from './campNameReducer';\r\nimport campSummReducer from './campSummReducer';\r\nimport sessionReducer from './sessionReducer';\r\nimport characterReducer from './characterReducer'\r\n\r\nconst reducers = combineReducers({\r\n    campName: campNameReducer,\r\n    campSumm: campSummReducer,\r\n    sessions: sessionReducer,\r\n    characters: characterReducer\r\n});\r\n\r\nexport default reducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './Components/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}