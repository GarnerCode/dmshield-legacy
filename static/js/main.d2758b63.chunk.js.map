{"version":3,"sources":["Components/images/logo.png","Components/Navbar.js","Components/store/actions/index.js","Components/SessionEntry.js","Components/Sessions.js","Components/Campaign.js","Components/CharForm.js","Components/CharEntry.js","Components/CharList.js","Components/Characters.js","Components/Encounters.js","App.js","reportWebVitals.js","Components/store/reducers/campNameReducer.js","Components/store/reducers/campSummReducer.js","Components/store/reducers/sessionReducer.js","Components/store/reducers/characterReducer.js","Components/store/reducers/index.js","Components/store/store.js","index.js"],"names":["Navbar","className","src","logo","alt","to","updateCampName","value","dispatch","type","payload","updateCampSumm","addSession","title","text","id","Math","random","deleteSession","target","addChar","formData","charId","charName","charLevel","charRace","charClass","charAc","charInit","charSpeed","charHp","charHit","charProf","charStr","charDex","charCon","charInt","charWis","charCha","deleteChar","editChar","values","SessionEntry","onClick","class","Sessions","useState","toggleAddSession","setToggleAddSession","titleInput","setTitleInput","textInput","setTextInput","handleToggle","sessions","useSelector","state","useDispatch","bindActionCreators","actionCreators","onSubmit","e","preventDefault","replace","handleSubmit","onChange","handleTitleInput","handleTextInput","cols","rows","map","session","Campaign","campName","campSumm","toggleCampInput","setToggleCampInput","handleCampToggle","placeholder","CharForm","handleToggleForm","defaultFormData","updateFormData","handleInputChange","key","name","handleFormSubmit","htmlFor","required","CharEntry","props","charData","setCharData","toggleEdit","setToggleEdit","CharList","characters","character","Characters","toggleForm","setToggleForm","Encounters","App","basename","process","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","filter","window","confirm","console","log","length","charCount","i","reducers","combineReducers","campNameReducer","campSummReducer","sessionReducer","characterReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2758b63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9884b52a.png\";","import React from 'react'\r\nimport logo from './images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <img src={logo} alt=\"\" />\r\n            <Link to='/'>\r\n                <button>\r\n                    <i className=\"fas fa-book\"></i>\r\n                </button>\r\n            </Link>\r\n            <Link to='/characters'>\r\n                <button>\r\n                    <i className=\"fas fa-users\"></i>\r\n                </button>\r\n            </Link>\r\n            <Link to='/encounters'>\r\n                <button>\r\n                    <i className=\"fas fa-skull\"></i>\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","/*import { actionCreators } from \"..\"*/\r\n\r\n/*Campaign Actions*/\r\nexport const updateCampName = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'updateName',\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCampSumm = (value) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'updateSumm',\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n\r\n/*Session Actions*/\r\nexport const addSession = (title, text) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'addSession',\r\n            title: title,\r\n            payload: text,\r\n            id: Math.random()\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteSession = (target) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'deleteSession',\r\n            payload: target\r\n        })\r\n    }\r\n}\r\n\r\n/*Character Actions*/\r\nexport const addChar = (formData) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'addChar',\r\n            charId: Math.random(),\r\n            charName: formData.charName,\r\n            charLevel: formData.charLevel,\r\n            charRace: formData.charRace,\r\n            charClass: formData.charClass,\r\n            charAc: formData.charAc,\r\n            charInit: formData.charInit,\r\n            charSpeed: formData.charSpeed,\r\n            charHp: formData.charHp,\r\n            charHit: formData.charHit,\r\n            charProf: formData.charProf,\r\n            charStr: formData.charStr,\r\n            charDex: formData.charDex,\r\n            charCon: formData.charCon,\r\n            charInt: formData.charInt,\r\n            charWis: formData.charWis,\r\n            charCha: formData.charCha,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteChar = (charId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'deleteChar',\r\n            payload: charId\r\n        })\r\n    }\r\n}\r\n\r\nexport const editChar = (values, charId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'editChar',\r\n            payload: values,\r\n            charId: charId\r\n        })\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function SessionEntry({ title, text, deleteSession, id }) {\r\n    return (\r\n        <div className='SessionEntry'>\r\n            <button onClick={() => deleteSession(id)}><i class=\"fas fa-trash\"></i></button>\r\n            <h1>{title}</h1>\r\n            <hr />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\nimport SessionEntry from './SessionEntry';\r\n\r\nexport default function Sessions() {\r\n\r\n    const [toggleAddSession, setToggleAddSession] = useState(false);\r\n    const [titleInput, setTitleInput] = useState('');\r\n    const [textInput, setTextInput] = useState('');\r\n\r\n    const handleToggle = () => {\r\n        setToggleAddSession(!toggleAddSession);\r\n    }\r\n\r\n    const handleTitleInput = (e) => {\r\n        setTitleInput(e.target.value);\r\n    }\r\n    const handleTextInput = (e) => {\r\n        setTextInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (titleInput.replace(/\\s+/g, '') === '' || textInput.replace(/\\s+/g, '') === '') {\r\n            return;\r\n        }\r\n        handleToggle();\r\n        addSession(titleInput, textInput);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const sessions = useSelector((state) => state.sessions);\r\n    const dispatch = useDispatch();\r\n\r\n    const { addSession, deleteSession } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    return (\r\n        <div className='Sessions'>\r\n            <h1>Session Logs</h1>\r\n            {toggleAddSession ?\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <input className='inputTitle' onChange={(e) => handleTitleInput(e)} value={titleInput} type=\"text\" />\r\n                    <textarea onChange={(e) => handleTextInput(e)} value={textInput} id=\"\" cols=\"50\" rows=\"10\"></textarea>\r\n                    <input className='submit' type=\"submit\" />\r\n                    <button className='cancel' onClick={handleToggle}>Cancel</button>\r\n                </form>\r\n                :\r\n                <button className='addSession' onClick={handleToggle}><i className=\"fas fa-plus\"></i></button>\r\n            }\r\n            {sessions.map(session => {\r\n                return (\r\n                    <SessionEntry\r\n                        title={session.title}\r\n                        text={session.text}\r\n                        deleteSession={deleteSession}\r\n                        id={session.id}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\nimport Sessions from './Sessions';\r\n\r\nexport default function Campaign() {\r\n\r\n    const campName = useSelector((state) => state.campName);\r\n    const campSumm = useSelector((state) => state.campSumm);\r\n    const dispatch = useDispatch();\r\n\r\n    const { updateCampName, updateCampSumm } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    const [toggleCampInput, setToggleCampInput] = useState(false);\r\n\r\n    const handleCampToggle = () => {\r\n        setToggleCampInput(!toggleCampInput);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Campaign\">\r\n            {toggleCampInput ? \r\n                <form className='formCampaign'>\r\n                    <button className=\"toggleInput\" onClick={handleCampToggle}><i className=\"fas fa-check\"></i></button>\r\n                    <input value={campName} onChange={(e) => updateCampName(e)} type=\"text\" placeholder=\"Campaign Title\" className=\"inputCampName\" />\r\n                    <textarea value={campSumm} onChange={(e) => updateCampSumm(e)} className=\"inputCampSumm\" placeholder=\"Short summary of your campaign\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                </form>\r\n                :\r\n                <div className=\"campInfo\">\r\n                    <button className=\"toggleInput\" onClick={handleCampToggle}><i className=\"fas fa-edit\"></i></button>\r\n                    <h1>{campName}</h1>\r\n                    <p>{campSumm}</p>\r\n                </div>\r\n            }\r\n            <Sessions />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\n\r\nexport default function CharForm({ handleToggleForm }) {\r\n\r\n    const defaultFormData = {\r\n        charName: '',\r\n        charLevel: '',\r\n        charRace: '',\r\n        charClass: '',\r\n        charAc: '',\r\n        charInit: '',\r\n        charSpeed: '',\r\n        charHp: '',\r\n        charHit: '',\r\n        charProf: '',\r\n        charStr: '',\r\n        charDex: '',\r\n        charCon: '',\r\n        charInt: '',\r\n        charWis: '',\r\n        charCha: ''\r\n    }\r\n\r\n    const [formData, updateFormData] = useState(defaultFormData);\r\n\r\n    const handleInputChange = (e) => {\r\n        /* Compare input name to key name, update specfic value */\r\n        for (const key in formData) {\r\n            if (e.target.name === key) {\r\n                updateFormData({ ...formData, [key]: e.target.value });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        addChar(formData);\r\n        handleToggleForm();\r\n        updateFormData(defaultFormData);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { addChar } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    return (\r\n        <div className='CharForm'>\r\n            <form onSubmit={(e) => handleFormSubmit(e)}>\r\n                <div className='textInputContainer'>\r\n                    <div className='containerLeft'>\r\n\r\n                    </div>\r\n                    <div className='containerRight'>\r\n\r\n                    </div>\r\n                    <div className='charInfo'>\r\n                        <label htmlFor=\"charName\">Name</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charName' required />\r\n                        <label htmlFor=\"charLevel\">Level</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charLevel' required />\r\n                        <label htmlFor=\"charRace\">Race</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charRace' />\r\n                        <label htmlFor=\"charClass\">Class</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charClass' required />\r\n                    </div>\r\n                    <div className='charMisc'>\r\n                        <label htmlFor=\"charAc\">Armor Class</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charAc' required />\r\n                        <label htmlFor=\"charInit\">Initiative</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charInit' required />\r\n                        <label htmlFor=\"charSpeed\">Speed</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charSpeed' required />\r\n                        <label htmlFor=\"charProf\">Proficency Bonus</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charProf' required />\r\n                    </div>\r\n                    <div className='charHealth'>\r\n                        <label htmlFor=\"charHp\">Max Hit Points</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charHp' required />\r\n                        <label htmlFor=\"charHit\">Hit Dice</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"text\" name='charHit' required />\r\n                    </div>\r\n                    <div className='charStats'>\r\n                        <label htmlFor=\"charStr\">Strength</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charStr' required />\r\n                        <label htmlFor=\"charDex\">Dexterity</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charDex' required />\r\n                        <label htmlFor=\"charCon\">Constitution</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charCon' required />\r\n                        <label htmlFor=\"charInt\">Intelligence</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charInt' required />\r\n                        <label htmlFor=\"charWis\">Wisdom</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charWis' required />\r\n                        <label htmlFor=\"charCha\">Charisma</label>\r\n                        <input onChange={(e) => handleInputChange(e)} type=\"number\" name='charCha' required />\r\n                    </div>\r\n                    <input type=\"submit\" />\r\n                    <button onClick={() => handleToggleForm()}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { React, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\n\r\nexport default function CharEntry(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { editChar } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    /*Establish local object state to utilize for-in loop to edit values*/\r\n\r\n    /*!!!Local values need to be passed back into store to establish consistency between route changes!!!*/\r\n\r\n    const [charData, setCharData] = useState({\r\n        'charName': props.charName,\r\n        'charLevel': props.charLevel,\r\n        'charRace': props.charRace,\r\n        'charClass': props.charClass,\r\n        'charAc': props.charAc,\r\n        'charInit': props.charInit,\r\n        'charSpeed': props.charSpeed,\r\n        'charHp': props.charHp,\r\n        'charHit': props.charHit,\r\n        'charProf': props.charProf,\r\n        'charStr': props.charStr,\r\n        'charDex': props.charDex,\r\n        'charCon': props.charCon,\r\n        'charInt': props.charInt,\r\n        'charWis': props.charWis,\r\n        'charCha': props.charCha\r\n    });\r\n    const handleInputChange = (e) => {\r\n        for (const key in charData) {\r\n            if (e.target.name === key) {\r\n                setCharData({ ...charData, [key]: e.target.value });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        editChar(charData, props.charId);\r\n        handleToggle();\r\n    }\r\n\r\n    const [toggleEdit, setToggleEdit] = useState(false);\r\n    const handleToggle = () => {\r\n        setToggleEdit(!toggleEdit);\r\n    }\r\n\r\n    return <div className=\"CharEntry\">\r\n        {toggleEdit ?\r\n            <form className='formCharEdit'>\r\n                <label htmlFor=\"charName\">Name</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charName' value={charData.charName} type=\"text\" />\r\n                <label htmlFor=\"charLevel\">Level</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charLevel' value={charData.charLevel} type=\"number\" />\r\n                <label htmlFor=\"charRace\">Race</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charRace' value={charData.charRace} type=\"text\" />\r\n                <label htmlFor=\"charClass\">Class</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charClass' value={charData.charClass} type=\"text\" />\r\n\r\n                <label htmlFor=\"charAc\">Armor Class</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charAc' value={charData.charAc} type=\"number\" />\r\n                <label htmlFor=\"charInitiative\">Initiative</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charInit' value={charData.charInit} type=\"number\" />\r\n                <label htmlFor=\"charSpeed\">Speed</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charSpeed' value={charData.charSpeed} type=\"number\" />\r\n\r\n                <label htmlFor=\"charHp\">Max HP</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charHp' value={charData.charHp} type=\"number\" />\r\n                <label htmlFor=\"charHit\">Hit Dice</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charHit' value={charData.charHit} type=\"text\" />\r\n                <label htmlFor=\"charProf\">Proficiency Bonus</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charProf' value={charData.charProf} type=\"number\" />\r\n\r\n                <label htmlFor=\"charStr\">Strength</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charStr' value={charData.charStr} type=\"number\" />\r\n                <label htmlFor=\"charDex\">Dexterity</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charDex' value={charData.charDex} type=\"number\" />\r\n                <label htmlFor=\"charCon\">Constitution</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charCon' value={charData.charCon} type=\"number\" />\r\n\r\n                <label htmlFor=\"charInt\">Intelligence</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charInt' value={charData.charInt} type=\"number\" />\r\n                <label htmlFor=\"charWis\">Wisdom</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charWis' value={charData.charWis} type=\"number\" />\r\n                <label htmlFor=\"charCha\">Charisma</label>\r\n                <input onChange={(e) => handleInputChange(e)} name='charCha' value={charData.charCha} type=\"number\" />\r\n                <button onClick={() => handleSubmit()}><i className=\"fas fa-check\"></i></button>\r\n            </form>\r\n            :\r\n            <div className='charData'>\r\n                <header>\r\n                    <h1>{charData.charName}</h1>\r\n                    <h2>Level {charData.charLevel} {charData.charRace} {charData.charClass}</h2>\r\n                </header>\r\n                <section className=\"charMisc\">\r\n                    <p><i className=\"fas fa-shield-alt\"></i> AC: {charData.charAc}</p>\r\n                    <p><i className=\"fas fa-list\"></i> Initiative: {charData.charInit}</p>\r\n                    <p><i className=\"fas fa-running\"></i> Speed: {charData.charSpeed}</p>\r\n                </section>\r\n                <section className=\"charHealth\">\r\n                    <p><i className=\"fas fa-heart\"></i> Max HP: {charData.charHp}</p>\r\n                    <p><i className=\"fas fa-heart-broken\"></i> Hit Dice: {charData.charHit}</p>\r\n                    <p><i className=\"fas fa-lightbulb\"></i> Proficency Bonus: {charData.charProf}</p>\r\n                </section>\r\n                <section className=\"charStatBlock\">\r\n                    <p><i className=\"fas fa-dumbbell\"></i> STR: {charData.charStr}</p>\r\n                    <p><i className=\"fas fa-balance-scale\"></i> DEX: {charData.charDex}</p>\r\n                    <p><i className=\"fas fa-heartbeat\"></i> CON: {charData.charCon}</p>\r\n                </section>\r\n                <section className=\"charStatBlock\">\r\n                    <p><i className=\"fas fa-book\"></i> INT: {charData.charInt}</p>\r\n                    <p><i className=\"fas fa-scroll\"></i> WIS: {charData.charWis}</p>\r\n                    <p><i className=\"fas fa-handshake\"></i> CHA: {charData.charCha}</p>\r\n                </section>\r\n                <footer>\r\n                    <button onClick={() => handleToggle()}><i className=\"fas fa-edit\"></i></button>\r\n                    <button onClick={() => props.deleteChar(props.charId)}><i className=\"fas fa-trash\"></i></button>\r\n                </footer>\r\n            </div>\r\n        }\r\n    </div>;\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from './store/index';\r\nimport CharEntry from './CharEntry';\r\n\r\nexport default function CharList() {\r\n\r\n    const characters = useSelector((state) => state.characters);\r\n    const dispatch = useDispatch();\r\n\r\n    const { deleteChar } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    return (\r\n        <div className=\"CharList\">\r\n            {characters.map(character => {\r\n                return (\r\n                    <CharEntry\r\n                        charName={character.charName}\r\n                        key={character.charId}\r\n                        charId={character.charId}\r\n                        charLevel={character.charLevel}\r\n                        charRace={character.charRace}\r\n                        charClass={character.charClass}\r\n                        charAc={character.charAc}\r\n                        charInit={character.charInit}\r\n                        charSpeed={character.charSpeed}\r\n                        charHp={character.charHp}\r\n                        charHit={character.charHit}\r\n                        charProf={character.charProf}\r\n                        charStr={character.charStr}\r\n                        charDex={character.charDex}\r\n                        charCon={character.charCon}\r\n                        charInt={character.charInt}\r\n                        charWis={character.charWis}\r\n                        charCha={character.charCha}\r\n                        deleteChar={deleteChar}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport CharForm from './CharForm';\r\nimport CharList from './CharList';\r\n\r\nexport default function Characters() {\r\n\r\n    const [toggleForm, setToggleForm] = useState(false);\r\n\r\n    const handleToggleForm = () => {\r\n        setToggleForm(!toggleForm);\r\n    }\r\n\r\n    return (\r\n        <div className='Characters'>\r\n            <h1>Characters</h1>\r\n            {toggleForm ? <CharForm handleToggleForm={handleToggleForm} /> : <button className='addChar' onClick={handleToggleForm}><i className=\"fas fa-plus\"></i></button>}\r\n            <CharList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Encounters() {\r\n    return (\r\n        <div>\r\n            <h1>Encounters</h1>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n/*App Components*/\nimport Navbar from './Components/Navbar';\nimport Campaign from './Components/Campaign';\nimport Characters from './Components/Characters';\nimport Encounters from './Components/Encounters';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Routes>\n          <Route exact path='/' element={<Campaign />} />\n          <Route exact path='/characters' element={<Characters />} />\n          <Route exact path='/encounters' element={<Encounters />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 'My Campaign', action) => {\r\n    switch (action.type) {\r\n        case 'updateName':\r\n            return action.payload.target.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = 'Summary of my campaign', action) => {\r\n    switch (action.type) {\r\n        case 'updateSumm':\r\n            return action.payload.target.value\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'addSession':\r\n            return [\r\n                ...state,\r\n                {\r\n                    title: action.title,\r\n                    text: action.payload,\r\n                    id: action.id\r\n                }\r\n            ]\r\n        case 'deleteSession':\r\n            return state.filter(session => session.id !== action.payload)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'addChar':\r\n            return [\r\n                ...state,\r\n                {\r\n                    charId: action.charId,\r\n                    charName: action.charName,\r\n                    charLevel: action.charLevel,\r\n                    charRace: action.charRace,\r\n                    charClass: action.charClass,\r\n                    charAc: action.charAc,\r\n                    charInit: action.charInit,\r\n                    charSpeed: action.charSpeed,\r\n                    charHp: action.charHp,\r\n                    charHit: action.charHit,\r\n                    charProf: action.charProf,\r\n                    charStr: action.charStr,\r\n                    charDex: action.charDex,\r\n                    charCon: action.charCon,\r\n                    charInt: action.charInt,\r\n                    charWis: action.charWis,\r\n                    charCha: action.charCha,\r\n                }\r\n            ]\r\n        case 'deleteChar':\r\n            if (window.confirm(\"Delete character?\") === true) {\r\n                return state.filter(character => character.charId !== action.payload);\r\n            } else {\r\n                return state;\r\n            }\r\n        case 'editChar':\r\n            console.log('Number of characters: ' + state.length);\r\n            const charCount = state.length;\r\n            for (var i = 0; i < charCount; i++) {\r\n                console.log(state[i]);\r\n                if (state[i].charId === action.charId) {\r\n                    state[i] = action.payload;\r\n                    state[i].charId = Math.random();\r\n                    return state;\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport campNameReducer from './campNameReducer';\r\nimport campSummReducer from './campSummReducer';\r\nimport sessionReducer from './sessionReducer';\r\nimport characterReducer from './characterReducer'\r\n\r\nconst reducers = combineReducers({\r\n    campName: campNameReducer,\r\n    campSumm: campSummReducer,\r\n    sessions: sessionReducer,\r\n    characters: characterReducer\r\n});\r\n\r\nexport default reducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './Components/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}